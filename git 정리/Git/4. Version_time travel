git으로 시간 여행하기

Reset
원하는 시점으로 돌아간 뒤 이후 내역을 지운다. (reset의 3가지 옵션은 Git/3. 3areas에 적어둠),
진정한 의미의 과거로 이동

Revert
되돌리기 원하는 시점의 커밋을 거꾸로 실행한다. = revert한 version을 하나 더 만든다. 
과거로 이동하는건 아니고 과거의 환경을 만드는 것
협업하다 보면 문제가 있는 version의 정보가 필요할 수 있는데, 이때 revert를 사용한다. 

Git의 HEAD = 현재 속한 브랜치의 가장 최신 commit

Checkout
HEAD를 사용하면 reset이나 revert와는 달리 원래의 브랜치에 영향을 주지 않고 과거의 파일 상태를 확인할  수 있다. 
git checkout HEAD~: ~갯수만큼 이전으로 이동한다.(^로도 됨) 
git checkout -: 이동을 한 단계 되돌리기 
HEAD는 가장 최신 커밋을 나타내기에 과거로 간다는게 모순적으로 느낄 수 있는데, 익명의 새로운 브랜치를 만드는 방식으로 이동하는 것이기에 정의와 충돌하지 않는다.

리셋한 걸 되돌리기
git reflog: 내가 한 모든 작업 내용을 볼 수 있다. -> 여기서 최근에 대량 리셋한 커밋의 해쉬를 복사 -> git reset —hard (해쉬)하면 되돌릴 수 있다.